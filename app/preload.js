!function(e,i){if("object"==typeof exports&&"object"==typeof module)module.exports=i();else if("function"==typeof define&&define.amd)define([],i);else{var o=i();for(var n in o)("object"==typeof exports?exports:e)[n]=o[n]}}(global,(()=>(()=>{"use strict";var e={r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},i={};e.r(i);const o=require("electron"),n={send(e,i){o.ipcRenderer.send(e,i)},on(e,i){const n=(e,...o)=>i(...o);return o.ipcRenderer.on(e,n),()=>{o.ipcRenderer.removeListener(e,n)}}};return o.contextBridge.exposeInMainWorld("ipc",n),o.contextBridge.exposeInMainWorld("electron",{minimize:()=>o.ipcRenderer.invoke("minimize"),maximize:()=>o.ipcRenderer.invoke("maximize"),close:()=>o.ipcRenderer.invoke("close"),isMaximized:()=>o.ipcRenderer.invoke("isMaximized"),saveDeck:e=>o.ipcRenderer.invoke("saveDeck",e),loadDeck:()=>o.ipcRenderer.invoke("loadDeck"),fetchWordDefinition:e=>o.ipcRenderer.invoke("dictionary:fetch-definition",e),fetchAudio:(e,i)=>o.ipcRenderer.invoke("dictionary:fetch-audio",e,i),checkAudioExists:e=>o.ipcRenderer.invoke("audio:check-exists",e),getAudioPath:e=>o.ipcRenderer.invoke("audio:get-path",e),saveAudioToCache:(e,i)=>o.ipcRenderer.invoke("audio:save",e,i),clearOldAudioCache:e=>o.ipcRenderer.invoke("audio:clear-old",e),exportToAnki:e=>o.ipcRenderer.invoke("deck:export-anki",e)}),i})()));
//# sourceMappingURL=preload.js.map